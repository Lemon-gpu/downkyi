name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      # Replace the values below with the actual paths/names from your repository
      Solution_Name: Downkyi.sln
      Test_Project_Path: tests/Downkyi.Tests/Downkyi.Tests.csproj
      Wap_Project_Directory: src/Downkyi.WPF
      Wap_Project_Path: src/Downkyi.WPF/Downkyi.WPF.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test ${{ env.Test_Project_Path }}

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Decode the pfx
      # If you don't have a signing certificate, you can comment out or remove these steps
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      # If you don't have a WAP project, remove or adjust this step
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}

    - name: Remove the pfx
      # If you don't have a signing certificate, you can comment or remove
      run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx

    - name: Upload build artifacts
      # Adjust if you want to upload exe or other output files
      uses: actions/upload-artifact@v4
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
